{"version":3,"sources":["redux/action/crypto.ts","components/CryptoTable/index.tsx","components/ConvertBlock/index.tsx","components/MainBlock/index.tsx","styles.ts","App.tsx","redux/reducers/cryptoReducer.ts","redux/store.ts","index.tsx"],"names":["fetchCryptoAsync","dispatch","type","axios","get","then","coins","data","Data","map","coin","name","CoinInfo","Name","fullName","FullName","imageUrl","ImageUrl","price","parseFloat","RAW","USD","PRICE","volume24hour","VOLUME24HOUR","toFixed","payload","i","fetchCrypto","CryptoTable","loading","classes","setPrice","diff","Paper","elevation","className","paper","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","component","scope","id","tableRow","onClick","onClickPrice","Avatar","src","alt","priceUp","priceDown","ConvertBlock","userCoin","React","useState","undefined","firstAmountCoin","setFirstAmountCoin","firstCoinName","setFirstCoinName","secondAmountCoin","setSecondAmountCoin","secondCoinName","setSecondCoinName","nodeRef","useRef","coinPrice","find","useEffect","newSecAmount","newFirstAmount","secVal","firstPrice","secPrice","newAmount","Number","val","console","log","inputWrapper","FormControl","TextField","label","variant","value","onChange","e","target","style","minWidth","InputLabel","Select","ref","current","focus","onFirstCoinNameChange","MenuItem","onSecondCoinNameChange","memo","MainBlock","useSelector","state","allCoins","setUserCoin","Grid","gridWrapper","container","spacing","item","xs","sm","md","lg","useStyles","makeStyles","theme","root","maxWidth","padding","paddingTop","textAlign","color","palette","text","secondary","display","justifyContent","marginBottom","breakpoints","down","cursor","background","App","useDispatch","getItems","setInterval","clearInterval","Container","initialState","allCoinsOldPrice","crypto","action","newObj","load","includes","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6da48793.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { TCoin } from '../../types';\r\n\r\n\r\nconst fetchCrypto = (payload: TCoin[])=> {\r\n    return {    \r\n        type: \"FETCH_CRYPTO\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport const comparePrices = (payload: number[])=>{\r\n    return {    \r\n        type: \"COMPARE_PRICES\",\r\n        payload \r\n    }\r\n}\r\n\r\nexport const getOldPrices = ()=>{\r\n    return {    \r\n        type: \"GET_OLD_PRICE\",\r\n    }\r\n}\r\n\r\nconst setLoading = ()=> {\r\n    return {    \r\n        type: \"SET_LOADING\",\r\n    }\r\n}\r\n\r\nexport const fetchCryptoAsync = ()=> {\r\n    return (dispatch: any)=>{\r\n        dispatch(setLoading())\r\n        return axios\r\n            .get('https://min-api.cryptocompare.com/data/top/totalvolfull?limit=10&tsym=USD')\r\n            .then(({ data }) => {\r\n                const coins: TCoin[] = data.Data.map((coin: any) => {\r\n                const obj: TCoin = {\r\n                    name: coin.CoinInfo.Name,\r\n                    fullName: coin.CoinInfo.FullName,\r\n                    imageUrl: `https://www.cryptocompare.com/${coin.CoinInfo.ImageUrl}`,\r\n                    price: parseFloat(coin.RAW.USD.PRICE),\r\n                    volume24hour: coin.RAW.USD.VOLUME24HOUR.toFixed(3),\r\n                }\r\n                return obj\r\n            });\r\n            dispatch(comparePrices(coins.map(i=>i.price)))\r\n            dispatch(fetchCrypto(coins));\r\n        })\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { TCoin } from '../../types';\r\n\r\ntype ICryptoTable = {\r\n  coins: TCoin[];\r\n  classes: any;\r\n  loading: boolean;\r\n  diff: number[];\r\n  setPrice: (coin: TCoin) => void;\r\n};\r\n\r\nconst CryptoTable: React.FC<ICryptoTable> = ({ coins, loading, classes, setPrice, diff }) => {\r\n  const onClickPrice = (coin: TCoin) => {\r\n    setPrice(coin);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper elevation={3} className={classes.paper}>\r\n        <TableContainer>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"left\"></TableCell>\r\n                <TableCell align=\"left\">Name</TableCell>\r\n                <TableCell align=\"left\">FullName</TableCell>\r\n                <TableCell align=\"left\">Price</TableCell>\r\n                <TableCell align=\"left\">Volume 24h</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {!loading ? (\r\n                coins.map((coin, id) => (\r\n                  <TableRow\r\n                    key={`${coin.name}` + `${id}`}\r\n                    className={classes.tableRow}\r\n                    onClick={() => onClickPrice(coin)}>\r\n                    <TableCell component=\"th\" scope=\"coin\">\r\n                      <Avatar src={coin.imageUrl} alt=\"Coin icon\" />\r\n                    </TableCell>\r\n                    <TableCell align=\"left\">{coin.name}</TableCell>\r\n                    <TableCell align=\"left\">{coin.fullName}</TableCell>\r\n                    <TableCell\r\n                      className={`${\r\n                        diff[id] > 0 ? classes.priceUp : diff[id] < 0 ? classes.priceDown : ''\r\n                      }`}\r\n                      align=\"left\">\r\n                      ${coin.price}\r\n                    </TableCell>\r\n                    <TableCell align=\"left\">${coin.volume24hour}</TableCell>\r\n                  </TableRow>\r\n                ))\r\n              ) : (\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"coin\">\r\n                    Загрузка коинов\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CryptoTable;\r\n","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { TCoin } from '../../types';\r\n\r\ntype IConvertBlock = {\r\n  classes: any;\r\n  coins: TCoin[];\r\n  userCoin: TCoin;\r\n  loading?: boolean;\r\n};\r\n\r\nconst ConvertBlock: React.FC<IConvertBlock> = ({ classes, coins, userCoin, loading }) => {\r\n  const [firstAmountCoin, setFirstAmountCoin] = React.useState<number | string>(\r\n    coins[0] !== undefined ? coins[0].price : '',\r\n  );\r\n  const [firstCoinName, setFirstCoinName] = React.useState<string>(\r\n    coins[0] !== undefined ? coins[0].name : '',\r\n  );\r\n  const [secondAmountCoin, setSecondAmountCoin] = React.useState<number | string>(\r\n    coins[1] !== undefined ? coins[1].price : '',\r\n  );\r\n  const [secondCoinName, setSecondCoinName] = React.useState<string>(\r\n    coins[1] !== undefined ? coins[1].name : '',\r\n  );\r\n\r\n  const nodeRef = React.useRef<HTMLDivElement>(null);\r\n  let coinPrice = (name: string) => coins.find((coin) => coin.name === name)?.price!;\r\n\r\n  React.useEffect(() => {\r\n    setFirstAmountCoin(userCoin.price);\r\n    setFirstCoinName(userCoin.name);\r\n    newSecAmount(userCoin.price, 1, coinPrice(secondCoinName));\r\n\r\n    if (userCoin.name === secondCoinName) {\r\n      setSecondCoinName('');\r\n      setSecondAmountCoin(0);\r\n    }\r\n  }, [userCoin]);\r\n\r\n  //react synthetic target event\r\n  const onFirstCoinNameChange = (e: any): void => {\r\n    if (nodeRef && nodeRef.current) {\r\n      nodeRef.current.focus();\r\n    }\r\n    setFirstCoinName(e.target.value);\r\n    setFirstAmountCoin(coinPrice(e.target.value));\r\n    newSecAmount(1, coinPrice(e.target.value), coinPrice(secondCoinName));\r\n    if (e.target.value === secondCoinName) {\r\n      setSecondCoinName('');\r\n      setSecondAmountCoin(0);\r\n    }\r\n  };\r\n\r\n  const onFirstAmountCoinChange = (val: number): void => {\r\n    console.log(val);\r\n    setFirstAmountCoin(val);\r\n    newSecAmount(val, coinPrice(firstCoinName), coinPrice(secondCoinName));\r\n  };\r\n\r\n  const onSecondCoinNameChange = (e: any): void => {\r\n    setSecondCoinName(e.target.value);\r\n    newSecAmount(firstAmountCoin, coinPrice(firstCoinName), coinPrice(e.target.value));\r\n    if (e.target.value === firstCoinName) {\r\n      setFirstCoinName('');\r\n      setFirstAmountCoin(0);\r\n    }\r\n  };\r\n\r\n  const onSecondAmountCoinChange = (val: number): void => {\r\n    setSecondAmountCoin(val);\r\n    newFirstAmount(val, coinPrice(firstCoinName), coinPrice(secondCoinName));\r\n  };\r\n\r\n  ////////////////////////////////////////////CONVERTING//////////////////\r\n  const newFirstAmount = (secVal: number | string, firstPrice: number, secPrice: number) => {\r\n    let newAmount: number = (Number(secVal) * Number(secPrice)) / Number(firstPrice);\r\n    //console.log(firstAmountCoin, firstPrice, secPrice, val, newPrice);\r\n    setFirstAmountCoin(newAmount);\r\n  };\r\n\r\n  const newSecAmount = (val: number | string, firstPrice: number, secPrice: number) => {\r\n    let newAmount: number = (Number(val) * Number(firstPrice)) / Number(secPrice);\r\n    console.log(firstAmountCoin, firstPrice, secPrice, val, newAmount);\r\n    setSecondAmountCoin(newAmount);\r\n  };\r\n\r\n  //console.log(userCoin.price, firstAmountCoin);\r\n  //console.log(userCoin.price, secondAmountCoin);\r\n  return (\r\n    <>\r\n      <Paper elevation={3} className={classes.paper}>\r\n        <div className={classes.inputWrapper}>\r\n          <FormControl>\r\n            <TextField\r\n              label=\"Сумма\"\r\n              variant=\"outlined\"\r\n              value={firstAmountCoin || ''}\r\n              onChange={(e) => onFirstAmountCoinChange(Number(e.target.value))}\r\n            />\r\n          </FormControl>\r\n          <FormControl variant=\"outlined\" style={{ minWidth: 100 }}>\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">Валюта</InputLabel>\r\n            <Select\r\n              label=\"Валюта\"\r\n              value={firstCoinName || ''}\r\n              ref={nodeRef}\r\n              onChange={(e) => onFirstCoinNameChange(e)}>\r\n              {coins.map((coin, id) => (\r\n                <MenuItem key={id} value={coin.name}>\r\n                  {coin.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n\r\n        <div className={classes.inputWrapper}>\r\n          <FormControl>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Сумма\"\r\n              value={secondAmountCoin || ''}\r\n              onChange={(e) => onSecondAmountCoinChange(Number(e.target.value))}\r\n            />\r\n          </FormControl>\r\n          <FormControl variant=\"outlined\" style={{ minWidth: 100 }}>\r\n            <InputLabel>Валюта</InputLabel>\r\n            <Select\r\n              label=\"Валюта\"\r\n              variant=\"outlined\"\r\n              value={secondCoinName || ''}\r\n              onChange={(e) => onSecondCoinNameChange(e)}>\r\n              {coins.map((coin, id) => (\r\n                <MenuItem key={id} value={coin.name}>\r\n                  {coin.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ConvertBlock);\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { CryptoState, TCoin } from '../../types';\r\n\r\nimport { ConvertBlock, CryptoTable } from '../index';\r\n\r\ntype MainBlockType = {\r\n  classes: any;\r\n};\r\n\r\nconst MainBlock: React.FC<MainBlockType> = ({ classes }) => {\r\n  const { allCoins, loading, diff } = useSelector((state: CryptoState) => state);\r\n\r\n  const [userCoin, setUserCoin] = React.useState<TCoin>({ ...allCoins[0] });\r\n\r\n  React.useEffect(() => {\r\n    setUserCoin({ ...userCoin, ...allCoins[0] });\r\n  }, []);\r\n\r\n  const setPrice = (coin: TCoin): void => {\r\n    if (coin !== undefined) {\r\n      setUserCoin(coin);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid className={classes.gridWrapper} container spacing={3}>\r\n        <Grid item xs={10} sm={10} md={10} lg={4}>\r\n          <ConvertBlock classes={classes} coins={allCoins} loading={loading} userCoin={userCoin} />\r\n        </Grid>\r\n        <Grid item xs={10} sm={10} md={10} lg={8}>\r\n          <CryptoTable\r\n            classes={classes}\r\n            coins={allCoins}\r\n            loading={loading}\r\n            setPrice={setPrice}\r\n            diff={diff}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainBlock;\r\n","import {makeStyles} from '@material-ui/core';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      minWidth: '900px',\r\n      maxWidth: '1360px',\r\n      padding: theme.spacing(12),\r\n      paddingTop: theme.spacing(10)\r\n      \r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    inputWrapper: {\r\n      display: 'flex',\r\n      justifyContent: 'space-around',\r\n      marginBottom: 25,\r\n    },\r\n\r\n    gridWrapper: {\r\n      display: 'flex',\r\n      minWidth: '555px',\r\n      [theme.breakpoints.down('md')]: {\r\n        justifyContent: 'center',\r\n      },\r\n    },\r\n    tableRow:{\r\n      cursor: 'pointer',\r\n    },\r\n\r\n    // priceBlock:{\r\n    //   background: '#96969670',\r\n    //   transition: 'background 4s linear',\r\n    //   // '&:priceUp':{\r\n    //   //   background: '#00800075', \r\n    //   //   transition: 'background 4s linear',\r\n    //   // },\r\n    //   // '::priceDown':{\r\n    //   //   background: '#ff00007a',\r\n    //   // },\r\n    //   '&:hover':{\r\n    //     background: '#00800075', \r\n    //     transition: 'background 1s linear',\r\n    //   },\r\n    //   priceUp:{\r\n    //       background: '#00800075', \r\n    //       //background: '#00800075',\r\n    //       //transition: '1s';\r\n    //       transition: 'background 1s linear',\r\n    //   },\r\n    // }\r\n    priceUp:{\r\n      background: '#00800075',\r\n      //transition: 'background 4s linear',\r\n    },\r\n    priceDown:{\r\n      background: '#ff00005c',\r\n      //transition: 'background 0.5s ease',\r\n    }\r\n  }));\r\n  \r\n  ","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport Container from '@material-ui/core/Container';\n\nimport { fetchCryptoAsync, getOldPrices } from './redux/action/crypto';\nimport { MainBlock } from './components';\n\nimport { useStyles } from './styles';\n\nfunction App() {\n  const classes = useStyles();\n  const dispatch: Dispatch<any> = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(fetchCryptoAsync());\n    let getItems = setInterval(() => {\n      dispatch(getOldPrices());\n      dispatch(fetchCryptoAsync());\n    }, 30000);\n    return () => clearInterval(getItems);\n  }, []);\n\n  return (\n    <Container className={classes.root}>\n      <MainBlock classes={classes} />\n    </Container>\n  );\n}\n\nexport default App;\n","import {  CryptoAction, CryptoState } from \"../../types\";\r\n\r\n\r\nconst initialState: CryptoState = {\r\n    allCoins: [],\r\n    allCoinsOldPrice: [],\r\n    diff: [],\r\n    loading: true,\r\n}\r\n\r\nconst crypto = (state:CryptoState = initialState, action: CryptoAction):CryptoState => {\r\n    switch (action.type) {\r\n        case \"FETCH_CRYPTO\":\r\n            return {\r\n                ...state,\r\n                allCoins: action.payload === undefined ? [] : [...action.payload],\r\n                loading: false\r\n            };\r\n        case \"GET_OLD_PRICE\":\r\n            return {\r\n                ...state,\r\n                allCoinsOldPrice: [...state.allCoins.map((i)=>i.price)],\r\n            };\r\n        case \"COMPARE_PRICES\":\r\n            let newObj = {\r\n                    ...state,\r\n                    diff: state.allCoinsOldPrice[0] !== action.payload[0] \r\n                    ? [...state.allCoinsOldPrice.map((price, i)=>{return <any>action.payload[i]-price})] \r\n                    : [...state.diff],\r\n                }\r\n            \r\n            return newObj;  \r\n        case \"SET_LOADING\":\r\n            let load = false\r\n            if (!state.diff.includes(0)){\r\n                load = true;\r\n            }\r\n            console.log(load)\r\n            return {\r\n                ...state,\r\n                loading: load\r\n            };\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default crypto;","import {createStore, compose, applyMiddleware, Store } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { DispatchType } from '../types';\r\nimport {crypto} from './reducers'\r\ndeclare var window: any;\r\n\r\n// const rootReducer = combineReducers(crypto)\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\n\r\nconst store: Store & {dispatch: DispatchType}  = createStore(crypto, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n     <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}